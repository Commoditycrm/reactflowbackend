name: CI & Deploy (Lightsail + PM2)

on:
  push:
    branches: ["**"]
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to deploy (default: main)"
        required: false
        default: "main"

jobs:
  build:
    name: Build (root project)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20 # don't set cache:yarn (invokes yarn too early)

      - name: Remove yarnPath override (if present)
        run: |
          if [ -f .yarnrc.yml ]; then
            sed -i '/^yarnPath:/d' .yarnrc.yml
          fi

      - name: Enable Corepack + pin Yarn 4.10.3
        run: |
          corepack enable
          corepack prepare yarn@4.10.3 --activate
          yarn --version

      # Yarn 4 uses a GLOBAL cache by default. Discover it and cache that path.
      - name: Discover Yarn cache dir
        id: yarncache
        run: echo "YARN_CACHE_DIR=$(yarn config get cacheFolder)" >> "$GITHUB_ENV"

      - name: Cache Yarn artifacts
        uses: actions/cache@v4
        with:
          path: ${{ env.YARN_CACHE_DIR }}
          key: ${{ runner.os }}-yarncache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarncache-

      - name: Install deps
        run: yarn install --immutable

      - name: Build (only if script exists)
        run: |
          if yarn run | grep -qE '(^|[[:space:]])build($|[[:space:]])'; then
            yarn build
          else
            echo "No build script found, skipping."
          fi

  deploy:
    name: Deploy to Lightsail (PM2)
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Select branch (manual runs can override)
        id: sel
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "BRANCH=${{ github.event.inputs.branch }}" >> $GITHUB_OUTPUT
          else
            echo "BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
          fi

      - name: Deploy over SSH (git pull + install/build + PM2 reload)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ${{ secrets.LIGHTSAIL_USER }}
          # If you use default 22, either remove the next line or set SSH_PORT=22 in repo secrets
          port: ${{ secrets.SSH_PORT || 22 }}
          key: ${{ secrets.LIGHTSAIL_KEY }}
          script_stop: true
          script: |
            set -e
            APP_DIR=${{ secrets.APP_DIR }}   # e.g. /var/www/app/reactflowbackend
            cd "$APP_DIR"

            # Update code to target branch
            if [ -d .git ]; then
              git fetch --all --prune
              git checkout "${{ steps.sel.outputs.BRANCH }}"
              git reset --hard "origin/${{ steps.sel.outputs.BRANCH }}"
            else
              echo "Directory is not a git repo. Please clone repo into $APP_DIR first."
              exit 1
            fi

            # Ensure we don't rely on a missing .yarn/releases file
            if [ -f .yarnrc.yml ]; then
              sed -i '/^yarnPath:/d' .yarnrc.yml || true
            fi

            # Enable Corepack + Yarn 4.10.3 on server
            if command -v corepack >/dev/null 2>&1; then
              corepack enable
              corepack prepare yarn@4.10.3 --activate
            else
              echo "corepack not found. Install Node 18+/20+ or enable Corepack."
              exit 1
            fi

            # Install + build at repo root
            yarn install --immutable

            if yarn run | grep -qE '(^|[[:space:]])build($|[[:space:]])'; then
              yarn build
            else
              echo "No build script found, skipping."
            fi

            # PM2 reload (expects ecosystem.config.js at repo root)
            pm2 startOrReload ecosystem.config.js
            pm2 save
            pm2 ls
